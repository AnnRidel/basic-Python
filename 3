# Задание-1:
# Напишите функцию, округляющую полученное произвольное десятичное число
# до кол-ва знаков (кол-во знаков передается вторым аргументом).
# Округление должно происходить по математическим правилам (0.6 --> 1, 0.4 --> 0).
# Для решения задачи не используйте встроенные функции и функции из модуля math.

#number = float (input ('Введите десятичное число: '))
#ndigits = int (input ('Введите количество знаков'))
#def my_round(number, ndigits):
#  number = number*(10**ndigits)+0.41
#  number = number//1
#  return number/(10**ndigits)
#print(my_round(number, ndigits))

# Задание-2:
# Дан шестизначный номер билета. Определить, является ли билет счастливым.
# Решение реализовать в виде функции.
# Билет считается счастливым, если сумма его первых и последних цифр равны.
# !!!P.S.: функция не должна НИЧЕГО print'ить

#lucky_ticket = lambda x :(lambda x : 'yes' if sum(x[:3]) == sum(x[3:]) else 'no')(list(map(int, str(x))))
#print(lucky_ticket(123123))

# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

#def fibonacci(n, m):
#    pass
#def fib(n,m):
#  import math
#  while n <= m :
#    a = int((((1 + math.sqrt(5))/2)**n-((1 - math.sqrt(5))/2)**n)/(math.sqrt(5)))
#    print (a)
#    n += 1
#
#x = fib(1,25)
#print ("="*50)

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

#sort_to_max = [2, 10, -12, 2.5, 20, -11, 4, 4, 0]
#def srt(list):
#    print (sort_to_max)
#    lst = []
#    while len(sort_to_max) > 0 :
#        a = sort_to_max[0]
#        for i in sort_to_max :
#            if i <= a :
#                a = i
#        sort_to_max.remove(a)
#        lst.append(a)
#    print (lst)
#srt(sort_to_max)

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

#tofilter = [99,99, 99,99,4, 2, 10, -12, 101, 2.5, 20, 7, 3, -11,4,4,4,0]
#def filt(arg, obj):
#    print (obj)
#    print ('='*60)
#    lst = []
#    for i in obj :
#        if i != arg :
#            lst.append(i)
#    print (lst)
#filt(99, tofilter)

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

#def is_parallelogram(a1, a2, a3, a4):
#    if abs(a3[0] - a2[0]) == abs(a4[0] - a1[0]) and abs(a2[1] - a1[1]) == abs(a3[1] - a4[1]):
#        return True
#    return False
#A = [2,3]
#B = [1,1]
#C = [4,1]
#D = [5,3]
#print(is_parallelogram(A, B, C, D))