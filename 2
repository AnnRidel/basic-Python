import math
import random
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.
# Подсказка: воспользоваться методом .format()
#fruits = ['Абрикос', 'Ананас', 'Апельсин', 'Банан', 'Маракуйя', 'Яблоко']
#for num, fruit in enumerate (fruits):
#     print (str(num) + '.  {:>30}'.format(fruit))

# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.
#first_spisok = input ('Введите первый список:')
#second_spisok = input ('Введите второй список:')
#first_spisok = [x for x in first_spisok if x not in second_spisok]
#print("Первый список без повторов:", first_spisok)

# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.
#num  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
#new_num = []
#print(num)
#for element in reversed(num):
#    count = num.index(element)
#    if (element % 2) == 0:
#        new_element = element/4
#        new_num.insert(0, new_element)
#        num.remove(element)
#    else:
#        element = element*2
#        num[count] = element
#print (new_num)
#print(num)

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
#num = [2, -5, 8, 9, -25, 25, 4]
#new_num = []
#for el in num:
#   if el > 0 and (math.sqrt(el)) % 1 == 0:
#        new_num.append(int(math.sqrt(el)))
#print (new_num)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
#date = input ('Введите дату: ')
#cor_date =  (date.split('.'))
#day = {'01':'первое','02':'второе','03':'третье','04':'четвертое','05':'пятое','06':'шестое','07':'седьмое','08':'восьмое','09':'девятое','10':'десятое','11':'одиннадцатое','12':'двенадцатое', '13':'тринадцатое','14':'четырнадцатое','15':'пятьнадцатое','16':'шестнадцатое','17':'семнадцатое','18':'восемнадцатое','19':'девятнадцатое','20':'двадцатое','21':'двадцать первое','22':'двадцать второе','23':'двадцать третье','24':'двадцать четвертое','25':'двадцать пятое','26':'двадцать шестое','27':'двадцать седьмое','28':'двадцать восьмое','29':'двадцать девятое','30':'тридцатое','31':'тридцать первое'}
#month = {'01':'января', '02':'февраля', '03':'марта', '04':'апреля', '05':'мая', '06':'июня','07':'июля', '08':'августа', '09':'сентября', '10':'октября', '11':'ноября', '12':'декабря'}
#print('Сегодня {} {} {} года.'.format(day[cor_date[0]], (month[cor_date[1]]), cor_date[2]))

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
#count = int (input('Введите количество элементов: '))
#spisok = []
#n = 0
#while n < count:
#   spisok.append(random.randint(-100, 100))
#   n +=1
#print(spisok)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

#count = int (input('Введите количество элементов: '))
#spisok = []
#n = 0
#while n < count:
#    spisok.append(random.randint(0, 10))
#    n +=1
#print(spisok)
#sort_spisok = set(spisok)
#print(sort_spisok)
#next_spisok = []
#for item in spisok:
#    if spisok.count(item) == 1:
#        next_spisok.append(item)
#print(next_spisok)